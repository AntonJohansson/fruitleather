```
type DifferentialForm(x): "\dd{$x}";
type DifferentialVec(x): "\dd{\vec{$x}}";
op +(a: DifferentialForm, b: DifferentialForm) -> DifferentialForm: "";
op +(a: DifferentialVec, b: DifferentialVec) -> DifferentialVec: "";
op *(a: DifferentialForm, b: Vector) -> DifferentialVec: "";
op _(a: Vector, b: Number) -> Vector: "";
op ^(a: DifferentialForm, b: Number) -> DifferentialForm: "";
var r: DifferentialVec;
prefixunaryop int(x: Unknown) -> Unknown: "int";
```

# Hello
hello!

@thm(test)
{
    hej a  b a ba
```
r = x^1*e_1 + y^2*e_2 + z^3*e_3;
```
```
r = x^1*e_1 + y^2*e_2 + z^3*e_3;
```
}

@def(test) A B C D E F
{
    hej a  b a ba
```
int r = r;
```
}
